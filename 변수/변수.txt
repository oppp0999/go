변수는 저장 공간이며, 구체적인 타입과 그와 연관된 이름을 가지고 있다. 2장에서 작성한 프로그램이 변수를 사용하도록 수정해 보자.

package main
 
import "fmt"
 
func main() {
    var x string = "Hello World"
    fmt.Println(x)
}
기존 프로그램의 문자열 리터럴이 이 프로그램에도 그대로 나오지만 그것을 곧바로 Println 함수에 전달하는 대신 변수에 할당했다. Go의 변수는 먼저 var 키워드를 이용해 만들어진 다음 변수명(x), 그리고 타입(string)을 지정한 다음 마지막으로 변수에 값(Hello World)을 할당한다. 마지막 단계는 선택 사항이므로 프로그램을 다음과 같은 식으로 작성할 수도 있다.

package main
 
import "fmt"
 
func main() {
    var x string
    x = "Hello World"
    fmt.Println(x)
}
Go에서의 변수는 대수학에서의 변수와 비슷하지만 몇 가지 미묘한 차이점이 있다.



x := "Hello World"
여기서 = 앞에 :가 있고 타입을 지정하지 않았다는 점을 눈여겨보자. Go 컴파일러가 변수에 할당하는 리터럴 값을 토대로 타입을 추론할 수 있기 때문에 타입은 필요하지 않다. (문자열 리터럴을 할당하고 있으므로 x에는 string 타입이 지정된다) 컴파일러는 var 문장에서도 타입을 추론할 수 있다.

var x = "Hello World"
다른 타입에 대해서도 이와 같은 원리가 적용된다.

x := 5
fmt.Println(x)
일반적으로 가능한 한 이러한 축약형을 사용해야 한다.


name := "Max"
fmt.Println("My dog's name is", name)
또는 다음과 같은 이름이 훨씬 더 낫다.

dogsName := "Max"
fmt.Println("My dog's name is", dogsName)
4장에서는 낙타 표기법(또는 혼합 표기법, 울퉁불퉁한 대문자, 낙타등으로도 알려진)으로 알려져 있는 변수명을 구성하는 단어들을 표현하는 특별한 방법을 사용한다. 첫 번째 단어의 첫 글자는 소문자로 쓰고, 이어지는 단어의 첫 번째 글자는 대문자로 쓰고, 나머지 글자는 모두 소문자로 쓴다.


Go에서는 한 함수에서 여러 값을 반환할 수도 있다.


func f() (int, int) {
    return 5, 6
}
 
func main() {
    x, y := f()
}
여러 값을 반환하려면 세 가지를 변경해야 한다. 먼저 반환형이 ,를 기준으로 여러 개의 값을 담도록 수정하고, 반환문 이후의 수식을 수정해 ,를 기준으로 여러 개의 수식을 담도록 수정하며, 마지막으로 다중값이 :=나 =의 왼쪽에 오도록 할당문을 수정한다.

다중값은 결과값과 함께 오류 값을 반환하거나(x, err := f()) 성공을 나타내는 불린값을 반환(x, ok := f())하는 데 자주 사용된다.

7.3 가변 함수
Go 함수의 마지막 매개변수에 사용할 수 있는 특별한 형태가 있다.

func add(args ...int) int {
    total := 0
    for _, v := range args {
         total += v
}
    return total
}
func main() {
    fmt.Println(add(1,2,3))
}
마지막 매개변수의 타입명 앞에 …를 사용해 해당 함수가 0개 이상의 매개변수를 받는다는 것을 나타낼 수 있다. 이 경우 0개 이상의 int를 받는다. int 값을 원하는 만큼 전달할 수 있다는 사실을 제외하면 다른 함수와 똑같은 방식으로 호출한다.

다음은 fmt.Println 함수가 정확히 어떻게 구현돼 있는지 보여준다.


func Println(a ...interface{}) (n int, err error)
Println 함수는 어떤 타입의 값을 임의 개수만큼 받아들인다(특별한 interface{} 타입은 9장에서 좀 더 자세히 살펴보겠다).

아울러 다음과 같이 ...가 포함된 슬라이스를 통해 int의 슬라이드를 전달할 수도 있다.

func main() {
    xs := []int{1,2,3}
    fmt.Println(add(xs...))
}